version: "3.1"

services:

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka_cluster:
    container_name: kafka_cluster
    image: wurstmeister/kafka:2.12-2.4.0
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.17.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "Topic1:1:1"
    ports:
      - "9092:9092"

  postgres_kafka:
    container_name: postgres_kafka
    image: postgres:9.6
    environment:
      POSTGRES_DB: kafkaservice
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - /var/lib/postgresql/data/
    restart: always

  kafkaservice:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: bash /code/docker-entrypoint.sh
    container_name: kafkaservice
    image: kafkaservice
    volumes:
      - .:/code
    ports:
      - "8081:8080"
    depends_on:
      - kafka_cluster
      - postgres_kafka
    environment:
      ALLOWED_HOSTS: "*"
      CORS_ORIGIN_WHITELIST: "*"
      DATABASE_ENGINE: "postgresql"
      DATABASE_NAME: "kafkaservice"
      DATABASE_USER: "root"
      DATABASE_PASSWORD: "root"
      DATABASE_HOST: "postgres_kafka"
      DATABASE_PORT: "5432"
      DEBUG: "True"
      DJANGO_SETTINGS_MODULE: "kafka_config.settings.production"
      KAFKA_TOPIC: "Topic1"
      KAFKA_HOST: "kafka_cluster"
      KAFKA_PORT: "9092"
      JWT_PUBLIC_KEY_RSA_BUILDLY: |-
        -----BEGIN PUBLIC KEY-----
        MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALFc9NFZaOaSwUMPNektbtJqEjYZ6IRB
        qhqvJu1hKPYn9HYd75c0gIDYHJ9lb7QwQvg44aO27104rDK0xSstzL0CAwEAAQ==
        -----END PUBLIC KEY-----
      SECRET_KEY: "nothing"
